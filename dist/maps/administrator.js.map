{"version":3,"sources":["administrator.js"],"names":["window","requirejs","Util","_this","this","initDataTable","$","selectBranchList","branchIdList","btnAssignBranch","branchContainer","btnBranchSumit","clickedUserId","on","confirm","params","id","data","axios","delete","then","response","success","location","reload","alert","console","log","catch","error","removeElement","el","parent","remove","reCountBranchList","_email","bind","event","_role","_self","attr","currentTarget","_action","_target","find","val","_name","method","res","getItemElement","elem","obj","name","append","push","checkDuplicateBranchId","text","trim","_id","_text","branchId","branchName","panelList","sortable","handle","update","i","len","length","_tmp","each","index","preventDefault","e","url","user_id","msg"],"mappings":"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","file":"administrator.js","sourcesContent":["/**\n * Created by yijaejun on 30/11/2016.\n */\n'use strict';\nwindow.requirejs([\n  'common'\n],\nfunction (Util) {\n  // datatable 설정\n  Util.initDataTable($('#table_administrator'));\n\n  const selectBranchList = window.$('.select-branch-list');\n  let branchIdList = [];\n  const btnAssignBranch = window.$('.btn-assign-branch');\n  const branchContainer = window.$('#draggablePanelList');\n  const btnBranchSumit = window.$('.btn-assign-branch-submit');\n  let clickedUserId = null;\n\n  // 관리자 삭제하기\n  window.$('#table_administrator').on('click', '.btn-delete-admin', () => {\n    if (!window.confirm('삭제 시 되돌릴 수 없습니다. 정말 삭제하시겠습니까?')) {\n      return false;\n    }\n\n    const params = {\n      id: window.$(this).data('user-id')\n    };\n\n    window.axios.delete('/administrator',\n      {\n        params: params\n      })\n      .then((response) => {\n        if (!response.data.success) {\n          window.alert('관리자를 삭제하지 못했습니다.');\n        } else {\n          window.alert('관리자를 삭제하였습니다.');\n        }\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  });\n\n  window.administrator = {\n    removeElement: function (el) {\n      $(el).parent().parent().remove();\n      branchIdList = reCountBranchList();\n      return false;\n    }\n  };\n\n  // 관리자 정보 수정\n  window.$('.btn-modify-admininfo').bind('click', (event) => {\n    const _self = window.$(event.currentTarget);\n    const _name = _self.attr('data-user-name');\n    const _email = _self.attr('data-user-email');\n    const _role = _self.attr('data-user-role');\n    const _action = _self.attr('data-url');\n    const _target = window.$('#frm_modify_admin');\n\n    clickedUserId = _self.attr('data-user-id');\n\n    _target.find('#name').val(_name);\n    _target.find('#email').val(_email);\n    _target.find('.employee_id').val(clickedUserId);\n    _target.find('#select_authority').val(_role);\n    _target.attr('action', _action);\n  });\n\n  // role 수정\n  window.$('.btn-modify-role').bind('click', (event) => {\n    const _self = window.$(event.currentTarget);\n    const _role = _self.attr('data-user-role');\n    const _target = window.$('#frm_change_admin_role');\n\n    clickedUserId = _self.attr('data-user-id');\n\n    _target.find('.user_id').val(clickedUserId);\n    _target.find('#select_authority').val(_role);\n  });\n\n  // supervisor 지점배정\n  window.$('.btn-add-branch').bind('click', (event) => {\n    const _self = window.$(event.currentTarget);\n    const _target = window.$('#frm_assign_branch');\n\n    clickedUserId = _self.attr('data-user-id');\n    _target.find('.user_id').val(clickedUserId);\n\n    window.axios({\n      method: 'get',\n      url: '/administrator/branch/' + clickedUserId\n    }).then((res) => {\n      if (res.data.success) {\n        branchIdList = [];\n        branchContainer.empty();\n\n        res.data.list.forEach((obj) => {\n          let elem = getItemElement(obj.id, obj.name);\n          branchContainer.append(elem);\n          branchIdList.push([clickedUserId, obj.id]);\n        });\n      } else {\n        window.alert('알 수 없는 오류가 발생했습니다. 잠시 후에 다시 시도해주세요.');\n      }\n    });\n  });\n\n  // 지점 추가\n  btnAssignBranch.bind('click', () => {\n    const _text = selectBranchList.find('option:selected').text().trim();\n    const _id = selectBranchList.find('option:selected').val().trim();\n\n    if (!checkDuplicateBranchId(_id)) {\n      const elem = getItemElement(_id, _text);\n      branchContainer.append(elem);\n      branchIdList.push([clickedUserId, _id]);\n    }\n  });\n\n  // 지점 템플릿에 데이터를 바인딩 후 반환한다.\n  const getItemElement = (branchId, branchName) => {\n    return '<li class=\"list-group-item\" data-branch-id=\"' + branchId + '\">' +\n      '<div class=\"course\">' + branchName + '<a href=\"#\" class=\"btn-delete-course\" onclick=\"administrator.removeElement(this);\">' +\n      ' <i class=\"fa fa-remove text-red\"></i></a>' +\n      ' </div>' +\n      '</li>';\n  };\n\n  // ref. http://www.bootply.com/dUQiGMggWO\n  const panelList = window.$('#draggablePanelList');\n  panelList.sortable({\n    handle: '.course',\n    update: () => {\n      branchIdList = reCountBranchList();\n    }\n  });\n\n  // 추가한 강의중에 중복이 있는지 확인을 한다.\n  const checkDuplicateBranchId = (id) => {\n    for (let i = 0, len = branchIdList.length; i < len; i++) {\n      if (branchIdList[i][1] === id) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // 지점 리스트를 다시 점검한다\n  const reCountBranchList = () => {\n    let _tmp = [];\n    window.$('.list-group-item', panelList).each((index, elem) => {\n      let _id = [ clickedUserId, window.$(elem).attr('data-branch-id') ];\n      _tmp.push(_id);\n    });\n    return _tmp;\n  };\n\n  btnBranchSumit.bind('click', (e) => {\n    e.preventDefault();\n\n    // Validation check\n    if (branchIdList.length <= 0) {\n      window.alert('지점을 추가하세요.');\n      return;\n    }\n\n    window.axios({\n      method: 'post',\n      url: '/administrator/assign/branch',\n      data: {\n        user_id: clickedUserId,\n        branch_list: branchIdList\n      }\n    }).then((res) => {\n      if (res.data.success) {\n        window.alert('지점을 배정하였습니다.');\n      } else {\n        console.log(res.data.msg);\n        window.alert('알 수 없는 오류가 발생했습니다. 잠시 후에 다시 시도해주세요.');\n      }\n\n      window.location.reload();\n    });\n  });\n});\n"],"sourceRoot":"/source/"}