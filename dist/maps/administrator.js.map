{"version":3,"sources":["administrator.js"],"names":["window","requirejs","Util","text","$","className","extend","selectBranchList","branchIdList","btnAssignBranch","branchContainer","btnBranchSumit","clickedUserId","on","confirm","axios","params","alert","data","delete","catch","then","response","success","removeElement","reCountBranchList","error","console","log","_self","el","_email","remove","_action","_target","bind","event","val","attr","_role","_name","find","currentTarget","res","list","url","empty","forEach","obj","elem","getItemElement","id","name","append","_text","checkDuplicateBranchId","trim","branchName","_id","panelList","branchId","sortable","handle","update","_tmp","i","len","length","e","preventDefault","each","index","branch_list","location","user_id","msg","reload"],"mappings":"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","file":"administrator.js","sourcesContent":["/**\n * Created by yijaejun on 30/11/2016.\n */\n'use strict';\nwindow.requirejs([\n  'common'\n],\n(Util) => {\n  // datatable 설정\n  Util.initDataTable(window.$('#table_admin'),\n    {\n      buttons:\n      [\n        {\n          text: '<i class=\"fa fa-copy\"></i> 복사',\n          extend: 'copy',\n          className: 'btn-sm btn-default',\n          exportOptions: {\n            columns: [ 0, 1, 2, 3 ]\n          }\n        },\n        {\n          text: '<i class=\"fa fa-download\"></i> 엑셀',\n          extend: 'excel',\n          className: 'btn-sm btn-default',\n          exportOptions: {\n            columns: [ 0, 1, 2, 3 ]\n          }\n        }\n      ]\n    });\n\n  const selectBranchList = window.$('.select-branch-list');\n  let branchIdList = [];\n  const btnAssignBranch = window.$('.btn-assign-branch');\n  const branchContainer = window.$('#draggablePanelList');\n  const btnBranchSumit = window.$('.btn-assign-branch-submit');\n  let clickedUserId = null;\n\n  // 관리자 삭제하기\n  window.$('#table_admin').on('click', '.btn-delete-admin', () => {\n    if (!window.confirm('삭제 시 되돌릴 수 없습니다. 정말 삭제하시겠습니까?')) {\n      return false;\n    }\n\n    const params = {\n      id: window.$(this).data('user-id')\n    };\n\n    window.axios.delete('/administrator',\n      {\n        params: params\n      })\n      .then((response) => {\n        if (!response.data.success) {\n          window.alert('관리자를 삭제하지 못했습니다.');\n        } else {\n          window.alert('관리자를 삭제하였습니다.');\n        }\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  });\n\n  window.administrator = {\n    removeElement: function (el) {\n      $(el).parent().parent().remove();\n      branchIdList = reCountBranchList();\n      return false;\n    }\n  };\n\n  // 관리자 정보 수정\n  window.$('.btn-modify-admininfo').bind('click', (event) => {\n    const _self = window.$(event.currentTarget);\n    const _name = _self.attr('data-user-name');\n    const _email = _self.attr('data-user-email');\n    const _role = _self.attr('data-user-role');\n    const _action = _self.attr('data-url');\n    const _target = window.$('#frm_modify_admin');\n\n    clickedUserId = _self.attr('data-user-id');\n\n    _target.find('#name').val(_name);\n    _target.find('#email').val(_email);\n    _target.find('.employee_id').val(clickedUserId);\n    _target.find('#select_authority').val(_role);\n    _target.attr('action', _action);\n  });\n\n  // role 수정\n  window.$('.btn-modify-role').bind('click', (event) => {\n    const _self = window.$(event.currentTarget);\n    const _role = _self.attr('data-user-role');\n    const _target = window.$('#frm_change_admin_role');\n\n    clickedUserId = _self.attr('data-user-id');\n\n    _target.find('.user_id').val(clickedUserId);\n    _target.find('#select_authority').val(_role);\n  });\n\n  // supervisor 지점배정\n  window.$('.btn-add-branch').bind('click', (event) => {\n    const _self = window.$(event.currentTarget);\n    const _target = window.$('#frm_assign_branch');\n\n    clickedUserId = _self.attr('data-user-id');\n    _target.find('.user_id').val(clickedUserId);\n\n    window.axios({\n      method: 'get',\n      url: '/administrator/branch/' + clickedUserId\n    }).then((res) => {\n      if (res.data.success) {\n        branchIdList = [];\n        branchContainer.empty();\n\n        res.data.list.forEach((obj) => {\n          let elem = getItemElement(obj.id, obj.name);\n          branchContainer.append(elem);\n          branchIdList.push([clickedUserId, obj.id]);\n        });\n      } else {\n        window.alert('알 수 없는 오류가 발생했습니다. 잠시 후에 다시 시도해주세요.');\n      }\n    });\n  });\n\n  // 지점 추가\n  btnAssignBranch.bind('click', () => {\n    const _text = selectBranchList.find('option:selected').text().trim();\n    const _id = selectBranchList.find('option:selected').val().trim();\n\n    if (!checkDuplicateBranchId(_id)) {\n      const elem = getItemElement(_id, _text);\n      branchContainer.append(elem);\n      branchIdList.push([clickedUserId, _id]);\n    }\n  });\n\n  // 지점 템플릿에 데이터를 바인딩 후 반환한다.\n  const getItemElement = (branchId, branchName) => {\n    return '<li class=\"list-group-item\" data-branch-id=\"' + branchId + '\">' +\n      '<div class=\"course\">' + branchName + '<a href=\"#\" class=\"btn-delete-course\" onclick=\"administrator.removeElement(this);\">' +\n      ' <i class=\"fa fa-remove text-red\"></i></a>' +\n      ' </div>' +\n      '</li>';\n  };\n\n  // ref. http://www.bootply.com/dUQiGMggWO\n  const panelList = window.$('#draggablePanelList');\n  panelList.sortable({\n    handle: '.course',\n    update: () => {\n      branchIdList = reCountBranchList();\n    }\n  });\n\n  // 추가한 강의중에 중복이 있는지 확인을 한다.\n  const checkDuplicateBranchId = (id) => {\n    for (let i = 0, len = branchIdList.length; i < len; i++) {\n      if (branchIdList[i][1] === id) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // 지점 리스트를 다시 점검한다\n  const reCountBranchList = () => {\n    let _tmp = [];\n    window.$('.list-group-item', panelList).each((index, elem) => {\n      let _id = [ clickedUserId, window.$(elem).attr('data-branch-id') ];\n      _tmp.push(_id);\n    });\n    return _tmp;\n  };\n\n  btnBranchSumit.bind('click', (e) => {\n    e.preventDefault();\n\n    // Validation check\n    if (branchIdList.length <= 0) {\n      window.alert('지점을 추가하세요.');\n      return;\n    }\n\n    window.axios({\n      method: 'post',\n      url: '/administrator/assign/branch',\n      data: {\n        user_id: clickedUserId,\n        branch_list: branchIdList\n      }\n    }).then((res) => {\n      if (res.data.success) {\n        window.alert('지점을 배정하였습니다.');\n      } else {\n        console.log(res.data.msg);\n        window.alert('알 수 없는 오류가 발생했습니다. 잠시 후에 다시 시도해주세요.');\n      }\n\n      window.location.reload();\n    });\n  });\n});\n"],"sourceRoot":"/source/"}