{"version":3,"sources":["education_details.js"],"names":["requirejs","btnDeleteEducation","makeCourseGroupList","$","courseGroupList","order","course_group","course_id","data","id","this","course_group_id","is","mode","push","valid_course_count","addCourseGroupItem","find","val","selectCourseList","course_name","course_group_key","duplicated_item","element","courseContainer","append","deleteEduCourse","course","calculateTotalWeight","pointTotal","pointWeightForm","each","index","elem","parseInt","validateEveryInput","_val","length","alert","split","_tmp","_len","slice","btnAddEduCourse","totalPoint","btnRegisterPointWeight","handle","sortable","forcePlaceholderSize","zIndex","start","e","ui","update","attr","item","oldIndex","newIndex","removeAttr","console","log","tinymce","init","selector","bind","confirm","params","edu_id","axios","then","response","location","success","href","catch","error","btnModifyEdu","eduName","focus","activeEditor","getContent","eduDesc","method","name","desc","course_group_list","start_dt","end_dt","trim","res","window","parent","on","target","frmPointWeight","submit","keyCode","html"],"mappings":"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","file":"education_details.js","sourcesContent":["/**\n * Created by yijaejun on 30/11/2016.\n */\n'use strict';\nrequirejs([\n  'common'\n],\nfunction (Util) {\n  var btnModifyEdu = $('.btn-modify-edu');            // 교육과정 수정버튼\n  var btnDeleteEducation = $('#btnDeleteEducation');  // 교육과정 삭제버튼\n  var btnAddEduCourse = $('#btn-add-course-edu');     // 강의추가 버튼\n  var selectCourseList = $('#select-course-list');    // 추가할 강의 리스트\n  var courseContainer = $('#draggablePanelList');     // 추가된 강의 목록\n  // 포인트 가중치 설정 관련 변수\n  var pointTotal = 0;\n  var frmPointWeight = $('#frm_point_weight');\n  var pointWeightForm = $('#pointWeight');\n  var totalPoint = $('.total_point');\n  var btnRegisterPointWeight = $('.btn-register-point-weight');\n\n  // 초기 설정\n  $(function () {\n    // jQuery UI sortable 초기화\n    $('#draggablePanelList').sortable({\n      placeholder: 'sort-highlight',\n      handle: '.handle',\n      forcePlaceholderSize: true,\n      zIndex: 999999,\n      start: function (e, ui) {\n        $(this).attr('data-previndex', ui.item.index());\n      },\n      update: function (e, ui) {\n        var newIndex = ui.item.index();\n        var oldIndex = $(this).attr('data-previndex');\n        $(this).removeAttr('data-previndex');\n        console.log('newIndex : ' + newIndex + ' oldIndex : ' + oldIndex);\n      }\n    });\n\n      // DateTimePicker 설정\n    // var start_dt = moment().format();\n    // var end_dt = moment().add(6, 'days');\n\n    //   // 교육 시작일자\n    // $('#start_dt').datetimepicker({\n    //   defaultDate: start_dt,\n    //   format: 'YYYY-MM-DD',\n    //   showTodayButton: true\n    // });\n\n    //   // 교육 종료일자\n    // $('#end_dt').datetimepicker({\n    //   defaultDate: end_dt,\n    //   format: 'YYYY-MM-DD',\n    //   useCurrent: false,\n    //   showTodayButton: true\n    // });\n\n    //   // 날짜가 서로 겹치지 않도록 설정한다.\n    // $('#start_dt').on('dp.change', function (e) {\n    //   $('#end_dt').data('DateTimePicker').minDate(e.date);\n    // });\n    // $('#end_dt').on('dp.change', function (e) {\n    //   $('#start_dt').data('DateTimePicker').maxDate(e.date);\n    // });\n\n    tinymce.init({\n      selector: '.course-desc'\n    });\n  });\n\n  // 교육과정 삭제하기\n  btnDeleteEducation.bind('click', function () {\n    if (!confirm('삭제 시 되돌릴 수 없습니다. 정말 삭제하시겠습니까?')) {\n      return false;\n    }\n\n    var params = {\n      edu_id: $(this).data('edu-id')\n    };\n\n    axios.delete('/education/deactivate',\n      {\n        params: params\n      })\n      .then(function (response) {\n        if (!response.data.success) {\n          alert('교육과정을 삭제하였습니다.');\n        } else {\n          alert('교육과정을 삭제하였습니다.');\n          location.href = '/education';\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  });\n\n  // 교육과정 수정\n  btnModifyEdu.bind('click', function () {\n    var eduName = $('.course-name');\n    var eduDesc = tinymce.activeEditor.getContent();\n    var courseGroupList = makeCourseGroupList();\n\n    if (eduName.val() == '') {\n      alert('교육과정명을 입력하세요.');\n      eduName.focus();\n      return false;\n    }\n\n    if (eduDesc === '') {\n      alert('교육과정 소개를 입력해주세요.');\n      eduDesc.focus();\n      return false;\n    }\n\n    if (!courseGroupList.valid_course_count) {\n      alert('강의를 추가해주세요.');\n      return false;\n    }\n\n    if (!confirm('수정하시겠습니까?')) {\n      return false;\n    }\n\n    axios({\n      method: 'put',\n      url: '/education/modify/edu',\n      data: {\n        id: $('#edu_id').val(),\n        name: eduName.val().trim(),\n        desc: eduDesc,\n        course_group_list: courseGroupList.data,\n        start_dt: $('#start_dt').find('input').val() + ' ' + '00:00:00',\n        end_dt: $('#end_dt').find('input').val() + ' ' + '23:59:59'\n      }\n    }).then(function (res) {\n      if (res.data.success == true) {\n        alert('교육과정을 수정하였습니다.');\n      } else {\n        alert('알 수 없는 오류가 발생했습니다. 잠시 후에 다시 시도해주세요.');\n      }\n      window.location.reload();\n    });\n  });\n\n  // 강의그룹 데이터를 생성한다.\n  function makeCourseGroupList () {\n    var courseGroupList = [];\n    var order = 0;\n    var mode = '';\n    var valid_course_count = 0;\n\n    $('#draggablePanelList').find('li.list-group-item').each(function (index) {\n      var course_group = {\n        id: $(this).data('course-group-id'),\n        course_id: $(this).data('course-id'),\n        course_group_id: $(this).data('course-group-key'),\n        order: order\n      };\n\n      if (course_group.id) {\n        if ($(this).is(':visible')) { course_group.mode = 'UPDATE'; } else { course_group.mode = 'DELETE'; }\n      } else { course_group.mode = 'INSERT'; }\n\n      courseGroupList.push(course_group);\n\n      if (course_group.mode !== 'DELETE') {\n        valid_course_count += 1;\n        order += 1;\n      }\n    });\n\n    return { data: courseGroupList, valid_course_count: valid_course_count };\n  }\n\n  // 강의 삭제\n  $('.btn-delete-course').bind('click', function () {\n    // API 삭제 요청\n    deleteEduCourse($(this).parent().parent());\n  });\n\n  // 강의 추가\n  btnAddEduCourse.bind('click', function () {\n    addCourseGroupItem();\n  });\n\n  /**\n   * 동적으로 추가된 강의에 이벤트 바인딩\n   */\n  courseContainer.on('click', '> li', function (e) {\n    // API 삭제 요청\n    deleteEduCourse($(e.target).parent().parent().parent());\n  });\n\n  // 강의를 그룹에 추가한다.\n  function addCourseGroupItem () {\n    var course_id = selectCourseList.find('option:selected').val();\n    var course_name = selectCourseList.find('option:selected').text();\n    var course_group_key = $('#course_group_key').val();\n    var element = '';\n\n      // 강의 중복추가 방지\n    var duplicated_item = $('.list-group-item[data-course-id=\"' + course_id + '\" ]');\n    if (duplicated_item.length) {\n      duplicated_item.show();\n      return false;\n    }\n\n    element += '<li class=\"list-group-item\" data-course-id=\"' + course_id + '\" data-course-group-id=\"\" data-course-group-key=\"' + course_group_key + '\">';\n    element += '    <div class=\"course\">';\n    element += '        <span class=\"handle ui-sortable-handle\">';\n    element += '            <i class=\"fa fa-ellipsis-v\"></i>';\n    element += '            <i class=\"fa fa-ellipsis-v\"></i>';\n    element += '        </span>';\n    element += course_name;\n    element += '        <a href=\"#\" class=\"btn-delete-course\">';\n    element += '            <i class=\"fa fa-remove text-red\"></i>';\n    element += '        </a>';\n    element += '    </div>';\n    element += '</li>';\n\n    courseContainer.append(element);\n  }\n\n  // 교육과정에서 강의를 삭제한다.\n  // @params course : .btn-delete-course 버튼의 부모의 부모 element\n  function deleteEduCourse (course) {\n    course.hide();\n  }\n\n  /**\n   * 강의순서를 변경한다.\n   */\n  // function changeCourseOrder () {\n  //   var promises = [];\n  //   var items = $('div.list-group-item');\n\n  //   for (var index = 0; index < items.length; index++) {\n  //     promises.push(makeCourseOrderChangeRequest($(items[index])));\n  //   }\n\n  //   axios.all(promises).then(function (results) {\n  //     results.forEach(function (response) {\n  //       location.reload();\n  //     });\n  //   });\n  // }\n\n  /**\n   * DB 에서 강의 순서를 변경한다.\n   */\n  function makeCourseOrderChangeRequest (course) {\n    return axios({\n      method: 'put',\n      url: '/education/coursegroup',\n      data: {\n        id: course.data('course-group-id'),\n        order: course.index()\n      }\n    });\n  }\n\n  // 설정값을 저장하려고 할 때 전체 값을 가져와서 합산이 100이 떨어지지 않을 경우 에러 메시지를 띄운다.\n  btnRegisterPointWeight.bind('click', function (e) {\n    var pointTotal = calculateTotalWeight();\n\n    if (pointTotal !== 100) {\n      alert('포인트의 합계가 100이 되어야 합니다. 설정 값을 다시 확인해 주세요');\n      e.preventDefault();\n    } else {\n      frmPointWeight.submit();\n    }\n  });\n\n  // 숫자가 입력되지 않았을 경우 경고창을 띄워준다.\n  pointWeightForm.find('input').bind('blur', function () {\n    validateEveryInput($(this));\n    totalPoint.html(calculateTotalWeight());\n  });\n\n  // input value 초기화\n  pointWeightForm.find('input').each(function (index, elem) {\n    if ($(elem).attr('type') !== 'hidden') {\n      var _val = $(elem).val();\n\n      if (_val === '') {\n        $(elem).val(0);\n        pointTotal = 0;\n      }\n      pointTotal += parseInt($(elem).val());\n      totalPoint.html(pointTotal);\n    }\n  });\n\n  // calculate totalPoint\n  pointWeightForm.find('input').bind('keydown', function (e) {\n    // block from insert dot character\n    if (e.keyCode === 190 || e.keyCode === 13) {\n      return false;\n    }\n    totalPoint.html(calculateTotalWeight());\n  });\n\n  // input값을 돌면서 합산을 내는 함수를 별도로 제작한다.\n  function calculateTotalWeight () {\n    var pointTotal = 0;\n    pointWeightForm.find('input').each(function (index, elem) {\n      if ($(elem).is(':visible')) {\n        pointTotal += parseInt($(elem).val());\n      }\n    });\n    return pointTotal;\n  }\n\n  /**\n   * 엘리먼트에 설정된 값을 규칙에 맞게 수정을 한다.\n   * @param elem\n   */\n  function validateEveryInput (elem) {\n    var _val = elem.val();\n\n    if (_val == 0 && _val.length >= 1) {\n      $(elem).val(0);\n    }\n\n    if (_val.length >= 3) {\n      alert('허용 범위를 넘었습니다.');\n      elem.val(0);\n    }\n\n    if (_val === '') {\n      elem.val(0);\n    }\n\n    // 숫자 앞에 0이 있을 경우 앞의 0을 자동으로 제거해준다\n    if (_val.split('')[0] === '0') {\n      var _tmp = _val.split(''); // 뽑아낸 것을 리턴한다.\n      var _len = _tmp.length;\n\n      if (_len >= 2) {\n        _val = _val.slice(1, _len);\n      }\n\n      elem.val(_val);\n    }\n  }\n});\n"],"sourceRoot":"/source/"}