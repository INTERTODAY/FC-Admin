{"version":3,"sources":["education.js"],"names":["requirejs","selectCourseList","course_name","element","find","val","text","duplicated_item","$","course_id","length","show","courseContainer","append","deleteEduCourse","course","remove","order","mode","valid_course_count","data","each","index","this","course_group","is","course_group_list","push","btnCreateEdu","Util","initDataTable","handle","sortable","forcePlaceholderSize","zIndex","start","e","ui","update","attr","item","oldIndex","newIndex","removeAttr","console","log","btnAddCourse","bind","addCourseGroupItem","on","target","parent","preventDefault","first","activeEditor","getContent","makeCourseGroupList","edu_name","alert","edu_desc","focus","axios","method","url","confirm","name","trim","desc","res","window","location"],"mappings":"AACA,YACAA,YAAAA,UAKE,SAAIC,GA6DF,QAAIC,KACJ,GAAIC,GAAJF,EAAAG,KAAA,mBAAAC,MADIH,EAAcD,EAAiBG,KAAK,mBAAmBE,OAGnDH,EAAA,GAGNI,EAAAC,EAAA,oCAAAC,EAAA,MACA,IAAAF,EAAAG,OAAA,MACDH,GAAAI,QADQ,CAKTR,IAAW,+CAAAM,EAAX,KACAN,GAAW,2BACXA,GAAW,mDACXA,GAAW,+CACXA,GAAWD,+CACXC,GAAW,kBACXA,GAAWD,EACXC,GAAW,iDACXA,GAAW,oDACXA,GAAW,eADXA,GAAW,aAGXS,GAAAA,QAAAA,EAAgBC,OAAOV,GAgBxB,QAAAW,GAAAC,GADCA,EAAOC,SAMP,QAAIC,KACJ,GAAIC,MACAC,EAAAA,EAEFA,EAAuBf,CAcrBa,OAZAR,GAAAA,uBAAmBW,KAAK,sBADPC,KAAA,SAAAC,GAEjBL,GAAAA,IAFFR,UAAAD,EAAAe,MAAAH,KAAA,aAEEH,MAAOA,EAIuBO,GAAaN,GAA3CV,EAAAe,MAAmEE,GAAA,YAAAD,EAAAN,KAAA,SAAAM,EAAAN,KAAA,SAAEM,EAAAN,KAAoB,SAC1FQ,EAAMC,KAAAH,GAAiC,WAAAA,EAAAN,OAKtCC,GAAsB,EAHxBO,GAAAA,MAIET,KAAAS,EAAAP,mBAAAA,GA1HN,GAAIP,GAAAA,EAAAA,uBACAgB,EAAiBpB,EAAA,uBADjBI,EAAkBJ,EAAE,uBAGtBoB,EAAYpB,EAAA,8BAEZA,GAAA,WA6BAqB,EAAAC,cAAAtB,EAAA,qBAGEuB,EAAAA,uBAFgCC,UAGhCC,YAAAA,iBACAC,OAAQ,UACRC,sBAAiBC,EACf5B,OAAA,OACD2B,MAP+B,SAAAC,EAAAC,GAQhCC,EAAAA,MAAQC,KAAA,iBAAiBF,EAAAG,KAAAlB,UAEvBgB,OAAIG,SAAWjC,EAAE6B,GACjB7B,GAAEkC,GAAMC,EAARH,KAAmBlB,QACnBsB,EAAYpC,EAAAe,MAAAgB,KAAgBG,iBAC7BlC,GAAAe,MAAAoB,WAAA,kBAbHC,QAAAC,IAAA,cAAAH,EAAA,eAAAD,QAoBDK,EAFDC,KAAA,QAAA,WACEC,MAqCDpC,EAFDqC,GAAA,QAAA,OAAA,SAAAb,GAGMtB,EAAAN,EAAA4B,EAAAc,QAAAC,SAAAA,SAAAA,YAGL3C,EAFD,sBAAAuC,KAAA,QAAA,WACEjC,EAAgBN,EAAEe,MAAM4B,SAASA,YAgCjCvB,EAASR,KAAMM,QAAAA,SAAmBP,GACnCiB,EAAAgB,gBAED,IACAxB,IADApB,EAAA,qBACauC,EAAb,gBAA2BM,SACvBD,EAAAA,QAAFE,aAAAC,aAKE7B,EAAoB8B,GAHtB,OACe,KAAbC,EAAAA,OADFC,MAEEC,iBAFFF,EAEgDG,SAC9ClC,GAGM,KAANgC,GACAD,MAAAA,oBACAE,EAAOC,SACR,GAGCF,EAAMvC,qBAKHO,QAAAA,kBAGJmC,QAMCC,OAAQ,OAJVC,IAAKC,wBAAwB5C,MAAe6C,KAAAR,EAAApD,MAAA6D,OAQxCC,KAAMR,EANFjC,kBAAAA,EAAAN,QAINA,KAAM,SAAAgD,GACiBF,GAArBD,EAAMR,KAAAA,QACNU,MAAMR,kBAEND,MAAA,uCAPJW,OAUQC,SAAUF,YAtBhBT,MAAAA,gBACO","file":"education.js","sourcesContent":["\n'use strict';\nrequirejs([\n  'common'\n],\nfunction (Util) {\n  var btnAddCourse = $('.btn-add-course-edu');\n  var selectCourseList = $('#select-course-list');\n  var courseContainer = $('#draggablePanelList');\n  var btnCreateEdu = $('.btn-register-course-submit');\n\n  $(function () {\n    // DateTimePicker 설정\n    // var startDt = moment().format();\n    // var endDt = moment().add(6, 'days');\n\n    // 교육 시작일자\n    // $('#start_dt').datetimepicker({\n    //   defaultDate: startDt,\n    //   format: 'YYYY-MM-DD',\n    //   showTodayButton: true\n    // });\n\n    // // 교육 종료일자\n    // $('#end_dt').datetimepicker({\n    //   defaultDate: endDt,\n    //   format: 'YYYY-MM-DD',\n    //   useCurrent: false,\n    //   showTodayButton: true\n    // });\n\n    // // 날짜가 서로 겹치지 않도록 설정한다.\n    // $('#start_dt').on('dp.change', function (e) {\n    //   $('#end_dt').data('DateTimePicker').minDate(e.date);\n    // });\n    // $('#end_dt').on('dp.change', function (e) {\n    //   $('#start_dt').data('DateTimePicker').maxDate(e.date);\n    // });\n\n    // datatable 설정\n    Util.initDataTable($('#table_education'));\n\n    // jQuery UI sortable 초기화\n    $('#draggablePanelList').sortable({\n      placeholder: 'sort-highlight',\n      handle: '.handle',\n      forcePlaceholderSize: true,\n      zIndex: 999999,\n      start: function (e, ui) {\n        $(this).attr('data-previndex', ui.item.index());\n      },\n      update: function (e, ui) {\n        var newIndex = ui.item.index();\n        var oldIndex = $(this).attr('data-previndex');\n        $(this).removeAttr('data-previndex');\n        console.log('newIndex : ' + newIndex + ' oldIndex : ' + oldIndex);\n      }\n    });\n  });\n\n  // 강의 추가\n  btnAddCourse.bind('click', function () {\n    addCourseGroupItem();\n  });\n\n  // 강의를 그룹에 추가한다.\n  function addCourseGroupItem () {\n    var course_id = selectCourseList.find('option:selected').val();\n    var course_name = selectCourseList.find('option:selected').text();\n    var element = '';\n\n            // 강의 중복추가 방지\n    var duplicated_item = $('.list-group-item[data-course-id=\"' + course_id + '\" ]');\n    if (duplicated_item.length) {\n      duplicated_item.show();\n      return false;\n    }\n\n    element += '<li class=\"list-group-item\" data-course-id=\"' + course_id + '\">';\n    element += '    <div class=\"course\">';\n    element += '        <span class=\"handle ui-sortable-handle\">';\n    element += '            <i class=\"fa fa-ellipsis-v\"></i>';\n    element += '            <i class=\"fa fa-ellipsis-v\"></i>';\n    element += '        </span>';\n    element += course_name;\n    element += '        <a href=\"#\" class=\"btn-delete-course\">';\n    element += '            <i class=\"fa fa-remove text-red\"></i>';\n    element += '        </a>';\n    element += '    </div>';\n    element += '</li>';\n\n    courseContainer.append(element);\n  }\n\n  /**\n   * 동적으로 추가된 강의에 이벤트 바인딩\n   */\n  courseContainer.on('click', '> li', function (e) {\n    deleteEduCourse($(e.target).parent().parent().parent());\n  });\n        // 강의 삭제\n  $('.btn-delete-course').bind('click', function () {\n    deleteEduCourse($(this).parent().parent());\n  });\n\n  function deleteEduCourse (course) {\n    course.remove();\n  }\n\n  // 강의그룹 데이터를 생성한다.\n  function makeCourseGroupList () {\n    var course_group_list = [];\n    var order = 0;\n    var mode = '';\n    var valid_course_count = 0;\n\n    $('#draggablePanelList').find('li.list-group-item').each(function (index) {\n      var course_group = {\n        course_id: $(this).data('course-id'),\n        order: order\n      };\n\n      if (course_group.id) {\n        if ($(this).is(':visible')) { course_group.mode = 'UPDATE'; } else { course_group.mode = 'DELETE'; }\n      } else { course_group.mode = 'INSERT'; }\n\n      course_group_list.push(course_group);\n\n      if (course_group.mode !== 'DELETE') {\n        valid_course_count += 1;\n        order += 1;\n      }\n    });\n\n    return { data: course_group_list, valid_course_count: valid_course_count };\n  }\n\n  // 교육과정 등록\n  btnCreateEdu.bind('click', function (e) {\n    e.preventDefault();\n\n    var modal = $('#frm_register_edu'),\n      edu_name = $('.course-name').first(),\n      edu_desc = tinymce.activeEditor.getContent(), // $('.course-desc');\n      course_group_list = makeCourseGroupList();\n\n    if (edu_name.val() === '') {\n      alert('교육과정명을 입력하세요.');\n      edu_name.focus();\n      return false;\n    }\n\n    if (edu_desc === '') {\n      alert('교육과정 소개를 입력해주세요.');\n      edu_desc.focus();\n      return false;\n    }\n\n    if (!course_group_list.valid_course_count) {\n      alert('강의를 추가해주세요.');\n      return false;\n    }\n\n    if (!confirm('등록하시겠습니까?')) { return false; }\n\n            // 저장한다.\n    axios({\n      method: 'post',\n      url: '/education/create/edu',\n      data: {\n        name: edu_name.val().trim(),\n        desc: edu_desc, // edu_desc.val().trim(),\n        course_group_list: course_group_list.data\n        // start_dt: $('#start_dt').find('input').val() + ' ' + '00:00:00',\n        // end_dt: $('#end_dt').find('input').val() + ' ' + '23:59:59'\n      }\n    }).then(function (res) {\n      if (res.data.success == true) {\n        alert('교육과정을 등록하였습니다.');\n      } else {\n        alert('알 수 없는 오류가 발생했습니다. 잠시 후에 다시 시도해주세요.');\n      }\n\n      window.location.reload();\n    });\n  });\n}); // end of func\n"],"sourceRoot":"/source/"}