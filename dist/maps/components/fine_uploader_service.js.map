{"version":3,"sources":["components/fine_uploader_service.js"],"names":["window","define","self","$","axios","qq","qqTemplate","FineUploaderService","options","this","extendOptions","hasOwnProperty","extend","a","b","key","init","getUploadInfo","then","response","data","uploadInfo","uploadUrl","replace","uploadCancelUrl","token","uploader","cors","allowXdr","append","expected","FineUploader","element","document","getElementById","el","validation","allowedExtensions","mutiple","itemLimit","stopOnFirstInvalidFile","endpoint","inputName","paramsInBody","params","folder","target_path","callbacks","onComplete","console","log","uploadStoredFiles","name","responseJSON","xhr","attach"],"mappings":"AAAA,YAEAA,QAAOC,QAML,SACA,QAJA,eAMA,iCACEC,SAAOC,EAAPC,EAAAC,EAAAC,GAID,QAAAC,GAAAC,GAJCN,EAAOO,KAOPP,EAAAQ,cAAAF,GACAA,EAAAA,OAZF,GAAIN,GAMFA,CA2EF,OAlEMK,GAAMI,WAELH,WACFI,OAAA,SAAAC,EAAAC,GACD,IAAA,GAAAC,KAAAD,GAT4BA,EAAAH,eAAAI,KAW9BF,EAAAE,GAAAD,EAAAC,GAGE,OAAKH,IAGPI,cAAM,SAAYR,GAChBN,KAAKe,QAAAA,KAALL,UAAAH,KAAAD,SAlB4BC,KAAAG,OAAAH,KAAAD,QAAAA,IAuB1BQ,KAAA,WACAd,EAAAe,iBAEEf,cAAKM,WACLN,EAAAA,IAAKM,8BALRU,KAAK,SAAUC,GAOZ,GAAAC,GAAAD,EAAAC,KAAAC,UACAnB,KACDA,EAAAM,QAAAc,UAAAF,EAAAE,UAAAC,QAAA,KAAA,UAVHrB,EAAAM,QAAAgB,gBAAAJ,EAAAI,gBArB4BtB,EAAAM,QAAAiB,MAAAL,EAAAK,MAoC5BC,EAAAA,sBAIEC,gBAAM,WACJC,EAAAA,sBADIC,OAAAvB,GAEJwB,EAAAA,GAAUzB,GAAA0B,cAFNC,QAJuBC,SAAAC,eAAAhC,EAAAM,QAAA2B,IAQ7BC,YAAY,EACVC,SAAAA,EAAAA,QAAoBC,QACpBC,MACAC,UAAAA,EAX2BV,UAAA,GAc3BW,YACAC,mBAAW,MAFJ,OAGPC,UAAAA,EACAC,wBAAQ,GAENC,SACAC,SAAAA,EAAatC,QAAAc,UAHPoB,UAAA,YAjBmBC,cAAA,EAuB7BI,QACEC,MAAAA,EAAYxC,QAAAiB,MACVwB,OAAQC,OACTJ,YAAA,SAGLzC,WACEqB,WAASyB,SAAAA,EAATC,EAAAC,EAAAC,GADFL,QAAAC,IAAAG,OAMJhD,EAAOE,SAAAA,eAAP,kBAAAgD,OAAA,QAAA,WAvFF7B,EAAAyB,wBAuFS5C","file":"components/fine_uploader_service.js","sourcesContent":["'use strict';\n\nwindow.define([\n  'jquery',\n  'axios',\n  'fineUploader',\n  'text!../../fine_uploader.html'\n], function ($, axios, qq, qqTemplate) {\n  var self;\n  var uploader;\n\n  function FineUploaderService (options) {\n    self = this;\n\n    self.extendOptions(options);\n    self.init();\n  }\n\n  FineUploaderService.prototype = {\n    // 옵션 저장 변수\n    options: {},\n    extend: function (a, b) {\n      for (var key in b) {\n        if (b.hasOwnProperty(key)) {\n          a[key] = b[key];\n        }\n      }\n      return a;\n    },\n    // 옵션 확장\n    extendOptions: function (options) {\n      this.options = this.extend({}, this.options);\n      this.extend(this.options, options);\n    },\n    // 컴포넌트 초기화\n    init: function () {\n      self.getUploadInfo();\n    },\n    getUploadInfo: function () {\n      axios.get('/api/v1/fineuploader/token')\n      .then(function (response) {\n        var data = response.data.uploadInfo;\n        if (data) {\n          self.options.uploadUrl = data.uploadUrl.replace('v4', 'cdnovp');\n          self.options.uploadCancelUrl = data.uploadCancelUrl;\n          self.options.token = data.token;\n\n          // console.log(self.options);\n          self.setFineUploader();\n        }\n      });\n    },\n    setFineUploader: function () {\n      $('#uploader-template').append(qqTemplate);\n      uploader = new qq.FineUploader({\n        element: document.getElementById(self.options.el),\n        autoUpload: false,\n        multiple: self.options.mutiple,\n        cors: {\n          allowXdr: true,\n          expected: true\n        },\n        validation: {\n          allowedExtensions: ['avi', 'mp4'],\n          itemLimit: 3,\n          stopOnFirstInvalidFile: true\n        },\n        request: {\n          endpoint: self.options.uploadUrl,\n          inputName: 'videofile',\n          paramsInBody: false,\n          params: {\n            token: self.options.token,\n            folder: '/dev',\n            target_path: '/dev'\n          }\n        },\n        callbacks: {\n          onComplete: function (id, name, responseJSON, xhr) {\n            console.log(responseJSON);\n          }\n        }\n      });\n      qq(document.getElementById('upload-button')).attach('click', function () {\n        uploader.uploadStoredFiles();\n      });\n    }\n  };\n\n  return FineUploaderService;\n});\n"],"sourceRoot":"/source/"}