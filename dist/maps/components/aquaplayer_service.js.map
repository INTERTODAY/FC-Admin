{"version":3,"sources":["components/aquaplayer_service.js"],"names":["window","define","AquaPlayerService","options","extend","self","encodedParam","init","$","a","b","key","hasOwnProperty","extendOptions","getEncodedParam","resize","this","initPlayer","player","controlBox","initNPlayerUI","mode","bindEvent","mygentAuthCall","setPlayerStart","genkey","fileUrl","url","getMediaURL","open","encodeURI","state","indicateUpdate","starthtml5State","reportMessage","NPlayer","OpenState","Opened","setVisible","Closed","PlayState","Playing","Stopped","Paused","name","desc","axios","ec","data","reportError","get","then","res","encparam","console","log","err","msg","getFullscreen","height"],"mappings":"AAAA,YACAA,QAAOC,QAAPD,SAQE,qCACA,UACA,aACA,WALA,gBAOA,SAASE,EAAAA,GAAT,QAASA,GAAmBC,GAO5BD,EAAAA,KAEEC,EAAAA,cAF4BA,GAG5BC,EAAAA,OATAC,GALEC,GAOFD,EAFAA,EAAO,KAGPA,EAAKE,GAALP,OAAAQ,CA+HF,OAtHQC,GAASC,WAEZP,WACDC,OAAA,SAAAK,EAAAC,GAT0B,IAAA,GAAAC,KAAAD,GAW5BA,EAAAE,eAAAD,KACAE,EAAAA,GAAeH,EAAAC,GAZa,OAAAF,IAkB1BJ,cAAKS,SAALX,GACAE,KAAKU,QAALC,KAAAZ,UAAAY,KAAAb,SACAa,KAAAZ,OAAAY,KAAAb,QAAAA,IAGFc,KAAAA,WACEC,EAAAA,kBACEC,EAAAA,UAFJF,WAAY,WAOVjB,EAAOkB,GAAPlB,QAAgBkB,QAAhB,SALEC,WAAY,uBAOdnB,SAAOoB,EALLC,KAAM,UAGRrB,OAAOkB,OAASA,EAQZlB,OAAAoB,cAAAF,GAEAA,EAAAI,UAAA,QAAA,WACAtB,EAAAA,cAAA,SAEAA,OAAAA,WAAOuB,WAJPvB,OAAOwB,gBAAe,GAQpBN,OAAAA,WAAYA,GAAAlB,OAAZuB,eAAA,SAAAE,GAJFzB,OAOGM,aAPHD,EAAAF,QAAAuB,QAAAD,EATJ,IAAAE,GAAA3B,OAAA4B,aAAA,EAaMV,GAAOW,MAONP,IAAAA,OAAUQ,UAAAH,MAJVrB,IAOLN,OAAQ+B,gBAAR/B,OAAAgC,kBAGEhC,EAAAA,UAAOiC,mBAAP,SAAAF,GAGA/B,OAFAK,EAAA6B,cAAA,oBAEAlC,GACA,IAAAA,QAAAmC,QAAAC,UAAAC,OAPFnB,EAAAoB,YAAA,GAHFtC,OAAAiC,iBAOI,MAOJf,KAAOI,QAAAA,QAAUc,UAAAG,OACflC,OAAK6B,eAAclC,OAAAmC,QAAnBC,UAAAG,WAKErB,EAAAI,UAAA,mBAAA,SAAAS,GAGAb,OARFb,EAAK6B,cAAc,oBAQjBhB,GACA,IAAAlB,QAAAmC,QAAAK,UAAAC,QALAvB,EAAOoB,YAAW,EAOpB,MAEE,KAAAtC,QAAAmC,QAAAK,UAAAE,QAXFxB,EAAAoB,YAAA,EAHF,MAkBApB,KAAOI,QAAAA,QAAUkB,UAAjBG,OACEtC,EAAK6B,YAAc,MAKpBhB,EAFDI,UAAA,gBAAA,SAAAsB,EAAAC,GA1F0BxC,EAAA6B,cAAA,mBAAAU,EAAA,MAAAC,KAgG1B7C,EAAO8C,UAAU,QAAA,SAAAC,GAEbzC,EAAAA,cAAmB0C,WAAnBD,MAKA1C,gBAAK4C,WACNjD,OARH8C,MAAAI,IAAA,2BAhG0BC,KAAA,SAAAC,GA2G5BlB,EAAekB,EAAAJ,KAAAK,SACbC,EAAQC,cAAIjD,GA5GcD,EAAAY,eA+G1BqC,MAAQC,SAAIC,GA/GcnD,EAAA4C,YAAAO,MAoHtBhD,cAAE,SAAiBA,GACpB8C,QAFDC,IAEO,iBAAAE,IAENR,YAAA,SAAAO,GACFF,QANDC,IAAA,iBAAAC,IAlHJzC,OAAA,WAkHIP,EAAER,QAAQe,OAAO,WAUdb,GAAAA,EAAPwD,gBAhJFlD,EAAA,UAAAmD,OAAAnD,EAAAR,QAAA2D,UA0IUnD,EAAE,UAAUmD,OAAOnD,EAAER,QAAQ2D,SAAWnD,EAAE,iBAAiBmD,cAM5DzD","file":"components/aquaplayer_service.js","sourcesContent":["'use strict';\nwindow.define([\n  'common',\n  'text!../../../nplayer_wrapper.html',\n  'nplayer',\n  'nplayer_ui',\n  'cdnproxy',\n  'nplayer_conf'\n], function (Util, NplayerWrapperTemplate) {\n  var self = null;\n  var encodedParam;\n  var player;\n  var $ = $ || window.$;\n\n  function AquaPlayerService (options) {\n    self = this;\n\n    self.extendOptions(options);\n    self.init();\n  }\n\n  AquaPlayerService.prototype = {\n    // 옵션 저장 변수\n    options: {},\n    extend: function (a, b) {\n      for (var key in b) {\n        if (b.hasOwnProperty(key)) {\n          a[key] = b[key];\n        }\n      }\n      return a;\n    },\n    // 옵션 확장\n    extendOptions: function (options) {\n      this.options = this.extend({}, this.options);\n      this.extend(this.options, options);\n    },\n    // 컴포넌트 초기화\n    init: function () {\n      self.getEncodedParam();\n      self.resize();\n      // self.options.container.html(NplayerWrapperTemplate);\n      // window.$('#video').height(window.$(window).height() - window.$('.wrapper_foot').height());\n    },\n    initPlayer: function () {\n      player = new window.NPlayer('video', {\n        controlBox: 'nplayer_control.html',\n        visible: false,\n        mode: 'html5'\n      });\n\n      window.player = player;\n\n      window.initNPlayerUI(player);\n\n      player.bindEvent('Ready', function () {\n        self.reportMessage('ready');\n\n        window.proxy_init(function () {\n          // 1. video start set\n          window.setPlayerStart(true);\n          // 2. nplayer instance set\n          window.setNPlayer(player);\n          // 4. media info set\n          window.mygentAuthCall(function (genkey) {\n            window.setMediaInfo(self.options.fileUrl, genkey);\n\n            var url = window.getMediaURL(false);\n            player.open({\n              'URL': window.encodeURI(url)\n            });\n          }, encodedParam);\n        }, window.indicateInstall, window.indicateUpdate);\n      });\n\n      player.bindEvent('OpenStateChanged', function (state) {\n        self.reportMessage('OpenStateChanged');\n\n        switch (state) {\n        case window.NPlayer.OpenState.Opened:\n          player.setVisible(true);\n          window.starthtml5State();\n          break;\n        case window.NPlayer.OpenState.Closed:\n          window.Stophtml5State(window.NPlayer.OpenState.Closed);\n          break;\n        }\n      });\n\n      player.bindEvent('PlayStateChanged', function (state) {\n        self.reportMessage('PlayStateChanged');\n\n        switch (state) {\n        case window.NPlayer.PlayState.Playing:\n          player.setVisible(true);\n          break;\n\n        case window.NPlayer.PlayState.Stopped:\n          player.setVisible(false);\n          break;\n\n        case window.NPlayer.PlayState.Paused:\n          player.setVisible(true);\n          break;\n        }\n      });\n\n      player.bindEvent('GuardCallback', function (name, desc) {\n        self.reportMessage('GuardCallback - ' + name + ' : ' + desc);\n      });\n\n      player.bindEvent('Error', function (ec) {\n        self.reportMessage('Error - ' + ec);\n      });\n    },\n    // encparam 을 서버에서 생성하여 전달받는다.\n    getEncodedParam: function () {\n      window.axios.get('/api/v1/player/encparam')\n        .then(function (res) {\n          encodedParam = res.data.encparam;\n          self.reportMessage(encodedParam);\n          self.initPlayer();\n        })\n        .catch(function (err) {\n          self.reportError(err);\n        }\n      );\n    },\n    reportMessage: function (msg) {\n      console.log('aquaservice : ' + msg);\n    },\n    reportError: function (err) {\n      console.log('aquaservice : ' + err);\n    },\n    resize: function () {\n      $(window).resize(function () {\n        if (player && !!player.getFullscreen()) {\n          $('#video').height($(window).height());\n        } else {\n          $('#video').height($(window).height() - $('.wrapper_foot').height());\n        }\n      });\n    }\n  };\n\n  return AquaPlayerService;\n});\n"],"sourceRoot":"/source/"}