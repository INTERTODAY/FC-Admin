{"version":3,"sources":["simple-assignment.js"],"names":["window","requirejs","activatedStep","sessionTemplate","$","getCoursesToAdd","axios","get","params","edu_id","sumPoint","val","then","checked","courses","newData","length","table","pointTotal","find","DataTable","clear","draw","rows","add","columns","adjust","getSessionList","data","console","error","setEmployeeIds","employeeIds","tableEmployee","nodes","$selectedPanel","res","each","connectWith","parent","children","prop","this","attr","text","getCourseList","refresh","eduId","selectedCourseId","undefined","sessionLoaded","append","getSessionView","session_list","sortable","start","e","ui","item","index","update","changeCourseOrder","changeSessionOrder","disableSelection","catch","err","log","tinymce","empty","eduInfo","can_replay","getCourseView","last","key","removeAttr","getEduInfo","education","name","activeEditor","setContent","desc","point_complete","point_quiz","point_final","point_reeltime","point_repetition","point_speed","id","tableCheckAll","tags","tagit","btnApplyEdu","modal","$target","activateStep","step","preventDefault","parseInt","nextSelector","currSelector","removeClass","trigger","updateProgress","success","alert","post","response","saveStep2Data","saveStep1Data","btnSaveSimpleAssign","formData","FormData","document","getElementById","files","assignmentId","logBindUserId","message","log_bind_user_id","getContent","complete_point","quiz_point","reeltime_point","location","start_dt","finish_dt","upload_employee_ids","edu_tags","is_existed_edu","training_edu_id","validateStep1","can_advance","currentTabId","trainingEduId","deleteAssignment","confirm","delete","href","validateStep2","pointIsValid","focus","$eduName","$eduDescription","execCommand","sum","promises","items","makeSessionOrderChangeRequest","sessionView","session","url","title","course_list_order","toggleIcon","push","all","$panelGroup","acct","perms","course_desc","teacher_name","order","makeCourseOrderChangeRequest","spread","$modal","prev","toggleClass","target","parents","closest","course_name","submit","addCourse","updateCourse","course_id","on","teacher_rate","put","courseId","replaceWith","createWindowPopup","onModifyCourseModalOpen","relatedTarget","Util","end","navListItems","allWells","_","modalAddCourses","tableCheckCourseAll","initDataTable","defaultContent","lengthMenu","buttons","btnDeleteSimpleAssign","className","btnSendMessage","visible","messageInput","courseView","tableEducations","hide","beforeTagAdded","tagLabel","messageBytes","btnAttachCourses","remain","courseTemplate","Handlebars","compile","windowOption","event","checkedCourses","getBytes","tableCourses","initDateTimePicker","map","row","join","startDt","$btnChangeEduPeriod","course_ids","click","numberToadd","moment","format","$item","i","activatedPanel","search","bind","hasClass","addClass","toString","input","debounce","point","course_list_id","course_list_type","courselistType","video_id","checklist_group_id","$self","remove","dataVideoId","dataType","courseListId","quizGroupId","dataTitle","checkedEmployeeIds","dataCourseListId","dataCourseId","dataQuizGroupId","dataChecklistGroupId","phones","videoId","currentTarget","trim","method","msg","cutBytes","html"],"mappings":"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","file":"simple-assignment.js","sourcesContent":["'use strict';\n\nwindow.requirejs([\n  'common',\n  'text!../course.template.html',\n  'text!../session.template.html'\n], function (Util, courseTemplate, sessionTemplate) {\n  var $ = undefined || window.$;\n  var _ = undefined || window._;\n  var assignmentId = $('#assignment_id').val();\n  var activatedStep = $('#activated_step').val();\n  var navListItems = $('ul.setup-panel li a');\n  var allWells = $('.setup-content');\n\n  var modalAddCourses = $('#addCourse');\n\n  var tableCheckAll = $('#check-all');\n  var tableCheckCourseAll = $('#js--formAddCourse').find('#check-all');\n  // var tableCourse = Util.initDataTable($('#table_course'));\n  var tableEmployee = Util.initDataTable($('#table_employee'), {\n    'lengthMenu': [\n      [5, 10, 25, 50, -1],\n      [5, 10, 25, 50, '전체']\n    ]\n  });\n  var tableCourses = Util.initDataTable($('#js--formAddCourse').find('#table_courses'), {\n    'columns': [\n      { 'data': null, defaultContent: '<input type=\"checkbox\",value=\"\">' },\n      { 'data': 'course_name', className: 'center' },\n      { 'data': 'teacher_name', className: 'center' },\n      { 'data': 'course_id', className: 'center', visible: false }\n    ],\n    'lengthMenu': [\n      [5, 10, 25, 50, -1],\n      [5, 10, 25, 50, '전체']\n    ],\n    buttons: []\n  });\n  var tableEducations = Util.initDataTable($('#js--formAddEdu').find('#table_edu'), {\n    'lengthMenu': [\n      [5, 10, 25, 50, -1],\n      [5, 10, 25, 50, '전체']\n    ],\n    buttons: []\n  });\n  var btnDeleteSimpleAssign = $('#js-delete-simple-assign');\n  var btnSaveSimpleAssign = $('#js-save-simple-assign');\n  var btnSendMessage = $('.btn-send-message');\n  var btnApplyEdu = $('#btnApplyEdu');\n  var btnAttachCourses = $('#btnAttachCourses');\n\n  var messageInput = $('.message');\n  var courseView = window.Handlebars.compile(courseTemplate);\n  var sessionView = window.Handlebars.compile(sessionTemplate);\n  var windowOption = 'scrollbars=yes, toolbar=no, location=no, status=no, menubar=no, resizable=yes, width=1040, height=760, left=0, top=0';\n\n  // Initialize\n  $(function () {\n    allWells.hide();\n\n    // window.tinymce.setActive('input-course-desc', true);\n    // window.tinymce.execCommand('mceFocus', false, 'input-course-desc');\n\n    $('#eduTags').tagit({\n      beforeTagAdded: function (event, ui) {\n        var message = ui.tagLabel;\n        var messageBytes = Util.getBytes(message);\n        var remain = 20 - messageBytes;\n\n        if (remain < 0) {\n          console.log(remain, ui.tagLabel);\n          return false;\n        }\n      }\n    });\n\n    // DateTimePicker 설정\n    Util.initDateTimePicker(\n      $('.date#start_dt'),\n      $('.date#end_dt')\n    );\n\n    modalAddCourses.on('show.bs.modal', function (e) {\n      getCoursesToAdd();\n    });\n\n    btnAttachCourses.on('click', function () {\n      var checkedCourses =\n        $(':checkbox:checked', tableCourses.rows(\n          // {\n          //   filter: 'applied'\n          // }\n        ).nodes()).map(\n          function () {\n            return tableCourses.row(window.$(this).parents('tr')).data()['course_id'];\n          }\n        ).get().join(', ');\n\n      if (checkedCourses === '') {\n        window.alert('강의를 선택하세요.');\n        return false;\n      }\n      if (!window.confirm('강의를 추가하시겠습니까?')) return false;\n\n      btnAttachCourses.prop('disabled', true);\n\n      window.axios.post('/simple_assignment/courses', {\n        edu_id: $('#edu_id').val(),\n        course_ids: checkedCourses\n      })\n      .then(function (res) {\n        if (res.data) {\n          btnAttachCourses.prop('disabled', false);\n          if (res.data.success !== false) {\n            window.alert('강의를 추가하였습니다.');\n\n            // 강의목록 새로고침\n            getCourseList();\n\n            // 모달창 종료\n            $('#addCourse').modal('hide');\n          } else {\n            window.alert('강의를 추가하지 못하였습니다.');\n            console.log(res.data.message);\n          }\n        }\n      });\n    });\n\n    $('.education-period').click(function () {\n      var $btnChangeEduPeriod = $(this);\n      var startDt = $('input[name=\\'start_dt\\']').val();\n      var numberToadd = $('#education-add-number').val();\n\n      if (numberToadd === '') return false;\n\n      switch ($btnChangeEduPeriod.data('period')) {\n      case 'hour':\n        $('input[name=\\'finish_dt\\']').val(window.moment(startDt).add(numberToadd, 'h').format('YYYY-MM-DD HH:mm'));\n        break;\n      case 'day':\n        $('input[name=\\'finish_dt\\']').val(window.moment(startDt).add(numberToadd, 'd').format('YYYY-MM-DD HH:mm'));\n        break;\n      case 'week':\n        $('input[name=\\'finish_dt\\']').val(window.moment(startDt).add(numberToadd, 'w').format('YYYY-MM-DD HH:mm'));\n        break;\n      case 'month':\n        $('input[name=\\'finish_dt\\']').val(window.moment(startDt).add(numberToadd, 'M').format('YYYY-MM-DD HH:mm'));\n        break;\n      case 'year':\n        $('input[name=\\'finish_dt\\']').val(window.moment(startDt).add(numberToadd, 'y').format('YYYY-MM-DD HH:mm'));\n        break;\n\n      default:\n        break;\n      }\n    });\n\n    $('#deselect-point-items').click(function () {\n      if (!window.confirm('점수를 초기화하시겠습니까?')) return false;\n      $('.point-item').each(function () {\n        $(this).parent().find('.input-group-addon').children('input:checkbox').prop('checked', false);\n        $(this).val(0);\n        $(this).prop('disabled', true);\n      });\n      sumPoint();\n    });\n\n    $('#select-point-items').click(function () {\n      $('.point-item').each(function () {\n        $(this).parent().find('.input-group-addon').children('input:checkbox').prop('checked', true);\n        // $(this).val(0);\n        $(this).prop('disabled', false);\n      });\n      sumPoint();\n    });\n\n    $('ul.setup-panel li').map(function () {\n      let $item = $(this);\n\n      for (var i = 2; i <= activatedStep; i++) {\n        if (i === $item.index() + 1) {\n          activateStep(i);\n        }\n      }\n    });\n\n    if ($('#edu_id').val()) {\n      getCourseList();\n      $('#btnGetEdu').prop('disabled', true);\n    }\n\n    // 교육대상자 id 조회\n    setEmployeeIds();\n\n    // 포인트 합계 계산\n    sumPoint();\n  });\n\n  // 간편배정 시 추가할 강의목록 (현재 매칭된 교육과정 외 강의목록을 불러온다.)\n  function getCoursesToAdd () {\n    window.axios.get('/simple_assignment/courses', {\n      params: {\n        edu_id: $('#edu_id').val()\n      }\n    })\n    .then(function (response) {\n      var newData = response.data.courses;\n      // console.log(newData);\n\n      if (newData.length > 0) {\n        // btnSaveAdminOffices.prop('disabled', false);\n        var table = $('#js--formAddCourse').find('#table_courses').DataTable();\n\n        table.clear().draw();\n        table.rows.add(newData);\n        table.columns.adjust().draw();\n      } else {\n        // btnSaveOfficeBranches.prop('disabled', true);\n      }\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  // 교육대상자 id 조회\n  function setEmployeeIds () {\n    var employeeIds = $(':checkbox:checked', tableEmployee.rows(\n      // {\n      //   filter: 'applied'\n      // }\n    ).nodes()).map(function () {\n      return $(this).data('id');\n    }).get().join(', ');\n    $('input[name=\\'upload_employee_ids\\']').val(employeeIds);\n  }\n\n  function sumPoint () {\n    var pointTotal = 0;\n    $('.point-item').each(function () {\n      var checked = $(this).parent().find('.input-group-addon').children('input:checkbox').prop('checked');\n      if (checked && $(this).val() !== '') {\n        pointTotal += parseInt($(this).val());\n      }\n    });\n\n    $('.badge').text(pointTotal);\n    return pointTotal;\n  }\n\n  /**\n   * 윈도우 팝업창에서의 저장 작업 완료 시 호출된다.\n   * @data: 갱신여부를 반환한다. true 일 경우 세션정보를 갱신한다.\n   */\n  window.winpop_listener = function (data) {\n    getSessionList(data);\n  };\n\n  /**\n   * 세션목록 조회\n   * 처음 강의를 열었을 때와 세션정보가 변경되는 경우만 세션 정보를 갱신한다.\n   */\n  function getSessionList (refresh) {\n    var selectedCourseId = $('.panel-group').data('selected-course-id');\n    var $selectedPanel = $('.panel[data-id=' + selectedCourseId + ']');\n\n    if ($selectedPanel.data('metadata').sessionLoaded === undefined || refresh) {\n      window.axios.get('/course/' + selectedCourseId)\n        .then(function (res) {\n          if (res.data) {\n            $selectedPanel.find('.session-content').html(getSessionView({\n              session_list: res.data.session_list\n            }));\n            $selectedPanel.data('metadata').sessionLoaded = true;\n\n            $('.list-group').sortable({\n              connectWith: '.list-group-item',\n              start: function (e, ui) {\n                $(this).attr('data-previndex', ui.item.index());\n              },\n              update: function (e, ui) {\n                // var newIndex = ui.item.index();\n                // var oldIndex = window.$(this).attr('data-previndex');\n                // window.console.log('newIndex : ' + newIndex + ' oldIndex : ' + oldIndex);\n                $(this).removeAttr('data-previndex');\n                changeSessionOrder();\n              }\n            }).disableSelection();\n          }\n        })\n        .catch(function (err) {\n          console.log(err);\n        });\n    }\n  }\n\n  /**\n   * 강의목록 조회\n   */\n  function getCourseList () {\n    var eduId = $('#edu_id').val();\n\n    $('#course-list').empty();\n\n    window.axios.get('/education/' + eduId + '/courses')\n      .then(function (res) {\n        if (res.data) {\n          $.each(res.data.edu_course_list, function (index, data) {\n            $('#course-list').append(getCourseView(data));\n            $('.panel').last().data('metadata', data);\n          });\n\n          $('#course-list').sortable({\n            connectWith: '.panel',\n            start: function (e, ui) {\n              $(this).attr('data-previndex', ui.item.index());\n            },\n            update: function (e, ui) {\n              // var newIndex = ui.item.index();\n              // var oldIndex = window.$(this).attr('data-previndex');\n              // window.console.log('newIndex : ' + newIndex + ' oldIndex : ' + oldIndex);\n              $(this).removeAttr('data-previndex');\n              changeCourseOrder();\n            }\n          }).disableSelection();\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  }\n\n  function getEduInfo (eduId) {\n    window.axios.get('/education/' + eduId + '/pointweight')\n      .then(function (res) {\n        if (res.data) {\n          const eduInfo = res.data.education[0];\n\n          $('input[name=\\'course_name\\']').val(eduInfo.name);\n          window.tinymce.activeEditor.setContent('');\n          window.tinymce.get('input-course-desc').setContent(eduInfo.desc);\n          $('input[name=\\'complete_point\\']').val(eduInfo.point_complete);\n          $('input[name=\\'quiz_point\\']').val(eduInfo.point_quiz);\n          $('input[name=\\'test_point\\']').val(eduInfo.point_final);\n          $('input[name=\\'reeltime_point\\']').val(eduInfo.point_reeltime);\n          $('input[name=\\'reps_point\\']').val(eduInfo.point_repetition);\n          $('input[name=\\'speed_point\\']').val(eduInfo.point_speed);\n          $('#can-replay').prop('checked', eduInfo.can_replay === 1);\n\n          $('#edu_id').val(eduInfo.id);\n          $('#edu_id').data('existed', 'Y');\n\n          // 포인트 합계 계산\n          sumPoint();\n\n          // 태그 입력\n          if (res.data.tags) {\n            for (var key in res.data.tags) {\n              $('#eduTags').tagit('createTag', res.data.tags[key].name);\n            }\n          }\n\n          // 강의 목록 조회\n          getCourseList();\n          // 모달창 종료\n          $('#addEdu').modal('hide');\n\n          // $(function () {\n          //   $('#js--formAddEdu').modal('hide');\n          // });\n\n          // 'name': $('input[name=\\'course_name\\']').val(),\n          // 'desc': window.tinymce.activeEditor.getContent({format: 'raw'}),\n          // 'complete_point': $('input[name=\\'complete_point\\']').val(),\n          // 'quiz_point': $('input[name=\\'quiz_point\\']').val(),\n          // 'test_point': $('input[name=\\'test_point\\']').val(),\n          // 'reeltime_point': $('input[name=\\'reeltime_point\\']').val(),\n          // 'speed_point': $('input[name=\\'speed_point\\']').val(),\n          // 'reps_point': $('input[name=\\'reps_point\\']').val(),\n          // 'start_dt': $('input[name=\\'start_dt\\']').val(),\n          // 'finish_dt': $('input[name=\\'finish_dt\\']').val(),\n          // 'assigment_id': assignmentId,\n          // 'upload_employee_ids': $('input[name=\\'upload_employee_ids\\']').val(),\n          // 'edu_id': $('#edu_id').val(),\n          // 'log_bind_user_id': $('#log_bind_user_id').val(),\n          // 'training_edu_id': $('#training_edu_id').val(),\n          // 'can_replay': $('#can-replay').prop('checked') ? 1 : 0\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  }\n\n  tableCheckAll.bind('click', function () {\n    $(':checkbox', tableEmployee.rows({\n      search: 'applied'\n    }).nodes()).prop('checked', this.checked);\n  });\n\n  tableCheckCourseAll.bind('click', function () {\n    $(':checkbox', tableCourses.rows({\n      search: 'applied'\n    }).nodes()).prop('checked', this.checked);\n  });\n\n  btnApplyEdu.bind('click', function (e) {\n    e.preventDefault();\n\n    var eduId = $('input:first:checked', tableEducations.rows({\n      search: 'applied'\n    }).nodes()).data('id');\n    if (eduId !== undefined) {\n      if (window.confirm('적용하시겠습니까?')) {\n        getEduInfo(eduId);\n      }\n    } else {\n      window.alert('교육과정을 선택하세요.');\n    }\n  });\n\n  navListItems.click(function (e) {\n    e.preventDefault();\n    var $target = $($(this).attr('href'));\n    var $item = $(this).closest('li');\n\n    if (!$item.hasClass('disabled')) {\n      navListItems.closest('li').removeClass('active');\n      $item.addClass('active');\n      allWells.hide();\n      $target.show();\n    }\n  });\n\n  if (activatedStep > 1) {\n    var activatedPanel = 'ul.setup-panel li a:eq(' + (activatedStep - 1).toString() + ')';\n    $(activatedPanel).click();\n  } else {\n    $('ul.setup-panel li.active a').trigger('click');\n  }\n\n  function activateStep (step) {\n    var currSelector = 'ul.setup-panel li:eq(' + (parseInt(step) - 1) + ')';\n    var nextSelector = 'ul.setup-panel li a[href=\"#step-' + step + '\"]';\n\n    $(currSelector).removeClass('disabled');\n    $(nextSelector).trigger('click');\n\n    // updateProgress(step);\n  }\n\n  // 1. 교육생 설정\n  $('.step1 > .next > a').on('click', function (e) {\n    e.preventDefault();\n    if (validateStep1()) {\n      if ($('#edu_id').val()) {\n        if (!window.confirm('엑셀 업로드 시 이전 배정내역은 모두 취소되며,\\n배정을 취소하는 경우 학습이력이 모두 초기화 됩니다.\\n그래도 계속 하시겠습니까?')) return false;\n      } else {\n        if (!window.confirm('저장하시겠습니까?')) return false;\n      }\n      activateStep(2);\n      saveStep1Data();\n    }\n  });\n  $('.step2 > .previous > a').on('click', function (e) {\n    e.preventDefault();\n    activateStep(1);\n  });\n  // 2. 교육과정 개설\n  $('.step2 > .next > a').on('click', function (e) {\n    e.preventDefault();\n    if (validateStep2()) {\n      if (!window.confirm('저장하시겠습니까?')) return false;\n      saveStep2Data();\n      activateStep(3);\n    }\n  });\n  $('.step3 > .previous > a').on('click', function (e) {\n    e.preventDefault();\n    activateStep(2);\n  });\n  // 3. 강의 개설\n  $('.step3 > .next > a').on('click', function (e) {\n    e.preventDefault();\n    // activateStep(4);\n    updateProgress(4);\n  });\n  $('.step4 > .previous > a').on('click', function (e) {\n    e.preventDefault();\n    activateStep(3);\n  });\n\n  $('.panel-collapse').on('hide.bs.collapse', function () {\n    $('.panel-collapse-clickable').find('i').removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');\n  });\n\n  $('.panel-collapse').on('show.bs.collapse', function () {\n    $('.panel-collapse-clickable').find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');\n  });\n\n  btnDeleteSimpleAssign.on('click', deleteAssignment);\n  btnSaveSimpleAssign.on('click', function () {\n    // updateProgress($('ul.setup-panel li.active').index() + 1);\n    var step = $('ul.setup-panel li.active').index() + 1;\n\n    $('.step' + step + ' > .next > a').trigger('click');\n    // if (!window.confirm('저장하시겠습니까?')) return false;\n    // switch (step) {\n    // case 1:\n    //   if (validateStep1()) {\n    //     saveStep1Data();\n    //   }\n    //   break;\n    // case 2:\n    //   if (validateStep2()) {\n    //     saveStep2Data();\n    //   }\n    //   break;\n    // default:\n    //   break;\n    // }\n  });\n\n  function updateProgress (step) {\n    if (activatedStep === 4 && step === 4) {\n      activateStep(step);\n      return false;\n    }\n\n    window.axios.post('/simple_assignment/progress', {\n      step: step,\n      id: assignmentId\n    })\n    .then(function (response) {\n      activateStep(step);\n      return true;\n    })\n    .catch(function (error) {\n      console.log(error);\n      return false;\n    });\n  }\n\n  /**\n   * 교육 대상자를 저장한다.\n   */\n  function saveStep1Data () {\n    btnSaveSimpleAssign.prop('disabled', true);\n\n    var formData = new window.FormData();\n    formData.append('upload_type', $('input[name=\\'upload_type\\']').val());\n    formData.append('upload_employee_ids', $('input[name=\\'upload_employee_ids\\']').val());\n    formData.append('file-excel', document.getElementById('UploadExcelFile').files[0]);\n    formData.append('group_name', '간편배정');\n    formData.append('redirect', false);\n    formData.append('id', assignmentId);\n    formData.append('log_bind_user_id', $('#log_bind_user_id').val());\n    formData.append('edu_id', $('#edu_id').val());\n    formData.append('start_dt', $('input[name=\\'start_dt\\']').val());\n    formData.append('finish_dt', $('input[name=\\'finish_dt\\']').val());\n    formData.append('training_edu_id', $('#training_edu_id').val());\n\n    window.axios.post('/assignment/upload', formData)\n      .then(function (res) {\n        if (res.data) {\n          btnSaveSimpleAssign.prop('disabled', false);\n\n          if (res.data.success !== false) {\n            $('#log_bind_user_id').val(res.data.logBindUserId);\n            window.alert('교육생을 저장하였습니다.');\n          } else {\n            window.alert('교육생을 저장하지 못하였습니다.');\n            console.log(res.data.message);\n          }\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  /**\n   * 교육과정 정보, 포인트 및 교육기간 정보를 저장한다.\n   */\n  function saveStep2Data () {\n    var data = {\n      'name': $('input[name=\\'course_name\\']').val(),\n      'desc': window.tinymce.get('input-course-desc').getContent({\n        format: 'raw'\n      }),\n      'complete_point': $('input[name=\\'complete_point\\']').val(),\n      'quiz_point': $('input[name=\\'quiz_point\\']').val(),\n      'test_point': $('input[name=\\'test_point\\']').val(),\n      'reeltime_point': $('input[name=\\'reeltime_point\\']').val(),\n      'speed_point': $('input[name=\\'speed_point\\']').val(),\n      'reps_point': $('input[name=\\'reps_point\\']').val(),\n      'start_dt': $('input[name=\\'start_dt\\']').val(),\n      'finish_dt': $('input[name=\\'finish_dt\\']').val(),\n      'assigment_id': assignmentId,\n      'upload_employee_ids': $('input[name=\\'upload_employee_ids\\']').val(),\n      'edu_id': $('#edu_id').val(),\n      'edu_tags': $('#eduTags').tagit('assignedTags'),\n      'is_existed_edu': $('#edu_id').data('existed'),\n      'log_bind_user_id': $('#log_bind_user_id').val(),\n      'training_edu_id': $('#training_edu_id').val(),\n      'can_replay': $('#can-replay').prop('checked') ? 1 : 0,\n      'can_advance': $('#can-advance').prop('checked') ? 0 : 1\n    };\n\n    // console.log(data);\n    // return false;\n\n    window.axios.post('/education', data)\n      .then(function (res) {\n        // console.log(res);\n        if (res.data) {\n          $('#training_edu_id').val(res.data.trainingEduId);\n          $('#edu_id').val(res.data.eduId);\n          window.alert('교육과정을 저장하였습니다.');\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  }\n\n  function deleteAssignment () {\n    if (!window.confirm('정말 삭제하시겠습니까?')) return false;\n\n    var params = {\n      id: assignmentId,\n      log_bind_user_id: $('#log_bind_user_id').val(),\n      edu_id: $('#edu_id').val()\n    };\n\n    window.axios.delete('/simple_assignment', {\n      params: params\n    })\n      .then(function (response) {\n        if (!response.data.success) {\n          window.alert('배정내역을 삭제하지 못하였습니다.');\n        } else {\n          window.alert('교육과정을 삭제하였습니다.');\n          window.location.href = '/simple_assignment';\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  /**\n   * 1. 교육 대상자 선택\n   */\n  function validateStep1 () {\n    var currentTabId = $('ul.select-employee li.active').children().attr('id');\n    var data = null;\n\n    $('input[name=\\'upload_type\\']').val(currentTabId);\n\n    switch (currentTabId) {\n    case 'employee': // 등록된 직원\n      data = $(':checkbox:checked', tableEmployee.rows(\n        // {\n        //   filter: 'applied'\n        // }\n      ).nodes()).map(function () {\n        return $(this).data('id');\n      }).get().join(', ');\n\n      // console.log('employee_ids:', data);\n\n      if (!data) {\n        window.alert('직원을 선택하세요.');\n        return false;\n      }\n\n      $('input[name=\\'upload_employee_ids\\']').val(data);\n      break;\n\n    case 'excel': // 파일업로드\n      if (document.getElementById('UploadExcelFile').files.length === 0) {\n        $('#UploadExcelFile').focus();\n        window.alert('파일을 선택하세요.');\n        return false;\n      }\n      break;\n\n    default:\n      break;\n    }\n\n    return true;\n  }\n\n  /**\n   * 2. 교육과정 입력\n   */\n  function validateStep2 () {\n    var $eduName = $('input[name=\\'course_name\\']');\n    var $eduDescription = $('#input-course-desc').val(); // window.tinymce.activeEditor.getContent();\n\n    if ($eduName.val() === '') {\n      window.alert('교육과정명을 입력하세요.');\n      $eduName.focus();\n      return false;\n    }\n\n    if ($eduDescription === '') {\n      window.alert('교육과정에 대한 설명을 입력하세요.');\n      window.tinymce.execCommand('mceFocus', false, 'input-course-desc');\n      return false;\n    }\n\n    var pointIsValid = true;\n    var pointTotal = 0;\n    $('.point-item').each(function () {\n      var checked = $(this).parent().find('.input-group-addon').children('input:checkbox').prop('checked');\n      // console.log('$(this).val()', checked, $(this).val());\n      if (checked) {\n        if ($(this).val() === '') {\n          window.alert($(this).prop('placeholder') + ' 포인트 점수를 입력하세요.');\n          $(this).focus();\n          pointIsValid = false;\n          return false;\n        } else {\n          pointTotal += parseInt($(this).val());\n        }\n      }\n    });\n\n    // console.log('pointTotal', pointTotal, pointIsValid);\n    if (!pointIsValid) return false;\n    if (pointTotal !== 100) {\n      window.alert('포인트의 합계는 100점이 되어야 합니다.');\n      return false;\n    }\n\n    return true;\n  }\n\n  $('.input-group-addon').children('input:checkbox').on('change', function () {\n    var input = $(this).parent().parent().find('.point-item');\n\n    input.prop('disabled', !$(this).prop('checked'));\n\n    if ($(this).prop('checked')) {\n      input.focus();\n    };\n  });\n\n  $('.point-item').on('keyup', _.debounce(function () {\n    var sum = 0;\n\n    $('.point-item').each(function () {\n      var checked = $(this).parent().find('.input-group-addon').children('input:checkbox').prop('checked');\n      if (checked && $(this).val() !== '' && $(this).val() !== '0') {\n        var point = parseInt($(this).val());\n        sum += point;\n      } else {\n        // $(this).prop('disabled', true);\n        // $(this).parent().find('.input-group-addon').children('input:checkbox').prop('checked', false);\n      }\n    });\n\n    if (sum > 0) {\n      $('.badge').text(sum);\n    }\n\n    if (sum > 100) {\n      window.alert('100점을 초과하였습니다.');\n      return false;\n    }\n  }, 300));\n\n  function getCourseView (data) {\n    return courseView(data);\n  }\n\n  function getSessionView (data) {\n    return sessionView(data);\n  }\n\n  /**\n   * 세션관련정보를 삭제한다.\n   * 주의사항:\n   * 세션과 관련된 일체를 실제 삭제하는 기능이므로, 꼭 필요한 경우에만 사용하도록 할 필요가 있다.\n   * 1. 세션정보(course_list) 삭제\n   * 2. 퀴즈 보기(quiz_option) 삭제\n   * 3. 퀴즈(quiz) 를 삭제한다.\n   * 4. 퀴즈 보기 그룹(quiz_group) 삭제\n   */\n  function deleteSession (params) {\n    window.axios.delete('/course/courselist', {\n      params: params\n    })\n      .then(function (response) {\n        if (!response.data.success) {\n          window.alert('진행한 이력이 있어 세션을 삭제하지 못했습니다. 관리자에게 문의해주시기 바랍니다.');\n        } else {\n          window.alert('세션을 삭제하였습니다.');\n          window.location.reload();\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  /**\n   * DB 에서 세션 순서를 변경한다.\n   */\n  function makeSessionOrderChangeRequest (session) {\n    return window.axios({\n      method: 'put',\n      url: '/course/courselist',\n      data: {\n        title: session.children('a').data('title'),\n        course_list_id: session.children('a').data('id'),\n        course_list_order: session.index()\n      }\n    });\n  }\n\n  /**\n   * 세션순서를 변경한다.\n   */\n  function changeSessionOrder () {\n    var promises = [];\n    var items = window.$('.session-content > .list-group-item');\n\n    for (var index = 0; index < items.length; index++) {\n      promises.push(makeSessionOrderChangeRequest(window.$(items[index])));\n    }\n\n    window.axios.all(promises)\n    .then(window.axios.spread(function (acct, perms) {\n      if (acct.data.success) {\n        window.alert('세션순서를 변경하였습니다.');\n      }\n    }));\n  }\n\n  /**\n   * DB 에서 강의 순서를 변경한다.\n   */\n  function makeCourseOrderChangeRequest (course) {\n    return window.axios({\n      method: 'put',\n      url: '/education/coursegroup',\n      data: {\n        id: course.data('group-id'), // course_group 의 id\n        order: course.index()\n      }\n    });\n  }\n\n  /**\n   * 강의순서를 변경한다.\n   */\n  function changeCourseOrder () {\n    var promises = [];\n    var items = $('#course-list > .panel');\n\n    for (var index = 0; index < items.length; index++) {\n      promises.push(makeCourseOrderChangeRequest(window.$(items[index])));\n    }\n\n    window.axios.all(promises)\n    .then(window.axios.spread(function (acct, perms) {\n      // console.log(acct);\n      // console.log(perms);\n      if (acct.data.success) {\n        window.alert('강의순서를 변경하였습니다.');\n      }\n    }));\n\n    // window.axios.all(promises).then(function (results) {\n    //   results.forEach(function (response) {\n    //     console.log(response);\n    //   });\n    // });\n  }\n\n  function toggleIcon (e) {\n    $(e.target)\n      .prev('.panel-heading')\n      .find('.more-less')\n      .toggleClass('glyphicon-plus glyphicon-minus');\n\n    // panel-group 에 현재 편집중인 강의 id 를 입력한다.\n    var $panelGroup = $(e.target).parents().find('.panel-group');\n    var selectedCourseId = $(e.target).parents().closest('.panel').data('id');\n\n    if ($panelGroup.data('selected-course-id') !== selectedCourseId) {\n      $panelGroup.data('selected-course-id', selectedCourseId);\n      getSessionList();\n    }\n  }\n\n  function addCourse () {\n    var $modal = $('#registerCourse');\n    var data = {\n      course_name: $modal.find('input[name=\\'course_name\\']').val(),\n      course_desc: window.tinymce.activeEditor.getContent(),\n      teacher_name: $modal.find('input[name=\\'teacher_name\\']').val(),\n      edu_id: $('#edu_id').val()\n    };\n\n    window.axios.post('/course', data)\n      .then(function (res) {\n        if (res.data) {\n          if ($('#course-list').children().length === 0) {\n            var currSelector = 'ul.setup-panel li:eq(3)'; // 4. 메세지\n            $(currSelector).removeClass('disabled');\n            updateProgress(4);\n          }\n          $('#course-list').append(getCourseView(res.data));\n          $('.panel').last().data('metadata', res.data);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  function updateCourse () {\n    var $modal = $('#modifyCourse');\n    var selectedCourseId = $('.panel-group').data('selected-course-id');\n    var data = {\n      course_id: selectedCourseId,\n      course_name: $modal.find('input[name=\\'course_name\\']').val(),\n      course_desc: window.tinymce.activeEditor.getContent(),\n      teacher_name: $modal.find('input[name=\\'teacher_name\\']').val(),\n      course_rate: 0,\n      teacher_rate: 0\n    };\n\n    window.axios.put('/course', data)\n      .then(function (res) {\n        if (res.data) {\n          // console.log(res.data);\n          $('.panel[data-id=' + res.data.course_id + ']').replaceWith(getCourseView(res.data));\n          $('.panel[data-id=' + res.data.course_id + ']').data('metadata', res.data);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  function onModifyCourseModalOpen (e) {\n    var data = $(e.relatedTarget).parents().closest('.panel').data('metadata');\n    var $modal = $(this);\n\n    // console.log(data);\n\n    $modal.find('input').val('').end();\n    window.tinymce.activeEditor.setContent('');\n    $modal.find('input[name=\\'course_name\\']').val(data.course_name);\n    $modal.find('input[name=\\'teacher_name\\']').val(data.teacher_name);\n    window.tinymce.get('course_desc').setContent(data.course_desc);\n    $modal.find('[autofocus]').focus();\n  }\n\n  $('#registerCourse').submit(function (e) {\n    e.preventDefault();\n\n    addCourse();\n\n    window.tinymce.execCommand('mceFocus', false, 'course_desc');\n    $(this).modal('toggle');\n  });\n  $('#modifyCourse').submit(function (e) {\n    e.preventDefault();\n\n    updateCourse();\n\n    window.tinymce.execCommand('mceFocus', false, 'course_desc');\n    $(this).modal('toggle');\n  });\n\n  $('.panel-group').on('hidden.bs.collapse', toggleIcon);\n  $('.panel-group').on('shown.bs.collapse', toggleIcon);\n  $('#registerCourse').on('hidden.bs.modal', function () {\n    $(this).find('input').val('').end();\n    window.tinymce.activeEditor.setContent('');\n  });\n  $('#registerCourse').on('shown.bs.modal', function () {\n    $(this).find('[autofocus]').focus();\n  });\n  $('#modifyCourse').on('shown.bs.modal', onModifyCourseModalOpen);\n  // $('#modifyCourse').on('hidden.bs.modal', onModifyCourseModalClose);\n\n  // 비디오 생성하기\n  $('.panel-group').on('click', '.btn-create-video', function (e) {\n    e.preventDefault();\n    var courseId = $(this).attr('data-course-id');\n    Util.createWindowPopup('/course/create/video?course_id=' + courseId, 'Video', windowOption);\n  });\n  // 퀴즈 생성하기\n  $('.panel-group').on('click', '.btn-create-quiz', function (e) {\n    e.preventDefault();\n\n    var courseId = $(this).attr('data-course-id');\n    Util.createWindowPopup('/course/create/quiz?course_id=' + courseId + '&type=QUIZ', 'Quiz', windowOption);\n  });\n  // 파이널테스트 생성하기\n  $('.panel-group').on('click', '.btn-create-final', function (e) {\n    e.preventDefault();\n\n    var courseId = $(this).attr('data-course-id');\n    Util.createWindowPopup('/course/create/quiz?course_id=' + courseId + '&type=FINAL', 'Final', windowOption);\n  });\n  // 파이널테스트 생성하기\n  $('.panel-group').on('click', '.btn-create-checklist', function (e) {\n    e.preventDefault();\n\n    var courseId = $(this).attr('data-course-id');\n    Util.createWindowPopup('/course/create/checklist?course_id=' + courseId + '&type=CHECK', 'Checklist', windowOption);\n  });\n  // 세션을 삭제한다.\n  $('.panel-group').on('click', '.btn-delete-session', function (e) {\n    e.preventDefault();\n\n    if (!window.confirm('삭제 시 되돌릴 수 없습니다. 정말 삭제하시겠습니까?')) {\n      return false;\n    }\n\n    var $self = $(this);\n    var params = {};\n    params.course_list_id = $(this).parent('span').data('course-list-id');\n    params.course_list_type = $(this).parent('span').data('type');\n\n    var courselistType = $(this).parent('span').data('type');\n    switch (courselistType) {\n    case 'QUIZ':\n    case 'FINAL':\n      params.quiz_group_id = $(this).data('quiz-group');\n      break;\n    case 'VIDEO':\n      params.video_id = $(this).data('video-id');\n      break;\n    case 'CHECKLIST':\n      params.checklist_group_id = $(this).data('checklist-group');\n      break;\n    default:\n      break;\n    }\n\n    window.axios.delete('/course/courselist', {\n      params: params\n    })\n      .then(function (response) {\n        if (!response.data.success) {\n          window.alert('진행한 이력이 있어 세션을 삭제하지 못했습니다. 관리자에게 문의해주시기 바랍니다.');\n        } else {\n          window.alert('세션을 삭제하였습니다.');\n          $self.parents('li').remove();\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  });\n\n  // 세션 수정하기\n  $('.panel-group').on('click', '.btn-modify-session', function (e) {\n    e.preventDefault();\n\n    var dataCourseId = $(this).parent('span').data('course-id');\n    var dataCourseListId = $(this).parent('span').data('course-list-id');\n    var dataVideoId = $(this).data('video-id');\n    var dataQuizGroupId = $(this).data('quiz-group');\n    var dataChecklistGroupId = $(this).data('checklist-group');\n    var dataType = $(this).parent('span').data('type'); // VIDEO/QUIZ/FINAL\n\n    if (dataType === 'VIDEO') {\n      Util.createWindowPopup('/course/modify/video?course_id=' + dataCourseId + '&course_list_id=' + dataCourseListId + '&video_id=' + dataVideoId, 'Video', windowOption);\n    } else if (dataType === 'QUIZ' || dataType === 'FINAL') {\n      Util.createWindowPopup('/course/modify/quiz?course_id=' + dataCourseId + '&course_list_id=' + dataCourseListId + '&type=' + dataType + '&quiz_group_id=' + dataQuizGroupId, 'Quiz', windowOption);\n    } else if (dataType === 'CHECKLIST') {\n      Util.createWindowPopup('/course/modify/checklist?course_id=' + dataCourseId + '&course_list_id=' + dataCourseListId + '&type=' + dataType + '&checklist_group_id=' + dataChecklistGroupId, 'Checklist', windowOption);\n    }\n  });\n\n  // 체크리스트 보기\n  $('.panel-group').on('click', '.btn-preview-checklist', function (e) {\n    e.preventDefault();\n    var courseListId = window.$(this).parent('span').data('course-list-id');\n    if (!courseListId) {\n      courseListId = window.$(this).data('id');\n    }\n    Util.createWindowPopup('/course/checklist?course_list_id=' + courseListId, 'Checklist', windowOption);\n  });\n\n  // 퀴즈 풀어보기\n  $('.panel-group').on('click', '.btn-solve-quiz', function (e) {\n    e.preventDefault();\n\n    var quizGroupId = window.$(this).attr('data-quiz-group');\n    var dataTitle = window.$(this).attr('data-title');\n    var dataType = window.$(this).attr('data-type');\n\n    Util.createWindowPopup('/course/quiz?id=' + quizGroupId + '&title=' + dataTitle + '&type=' + dataType, 'Quiz', windowOption);\n  });\n\n  // 비디오 보기\n  $('.panel-group').on('click', '.btn-watch-video', function (e) {\n    e.preventDefault();\n\n    // 비디오 아이디를 추출\n    var videoId = window.$(this).attr('data-video-id');\n    Util.createWindowPopup('/course/video?id=' + videoId, 'Video', windowOption);\n  });\n\n  $('.panel-group').on('click', '.btn-delete-course', function () {\n    if (window.confirm('선택하신 강의를 삭제하시겠습니까?')) {\n      var selectedCourseId = $('.panel-group').data('selected-course-id');\n\n      window.axios.delete('/course/deactivate', {\n        params: {\n          id: selectedCourseId\n        }\n      })\n        .then(function (res) {\n          if (res.data.success) {\n            $('.panel[data-id=' + selectedCourseId + ']').remove();\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  });\n\n  btnSendMessage.on('click', function (e) {\n    e.preventDefault();\n\n    var currentTabId = $('ul.select-employee li.active').children().attr('id');\n    var checkedEmployeeIds;\n    switch (currentTabId) {\n    case 'employee':\n      checkedEmployeeIds = window.$(':checkbox:checked',\n          tableEmployee.rows(\n            // {\n            //   filter: 'applied'\n            // }\n          ).nodes()).map(\n          function () {\n            return tableEmployee.row(window.$(this).parents('tr')).data()[4];\n          }\n        ).get().join(',');\n      break;\n    case 'employee-assigned':\n        // checkedEmployeeIds = window.$(':checkbox:checked',\n        //   tableAssignedEmployee.rows({filter: 'applied'}).nodes()).map(\n        //     function () {\n        //       return tableAssignedEmployee.row(window.$(this).parents('tr')).data()['user_phone'];\n        //     }\n        //   ).get().join(',');\n      break;\n    default:\n      break;\n    }\n\n    if (!checkedEmployeeIds) {\n      window.alert('직원을 선택하세요.');\n      return false;\n    }\n\n    var message = messageInput.val().trim();\n    if (message === '') {\n      window.alert('메세지를 입력하세요.');\n      messageInput.focus();\n      return false;\n    }\n\n    if (!window.confirm('메세지를 보내시겠습니까?')) {\n      return false;\n    }\n\n    window.axios({\n      method: 'post',\n      url: '/api/v1/sms/send',\n      data: {\n        phones: checkedEmployeeIds,\n        msg: message\n      }\n    })\n      .then(\n        function (res) {\n          if (res.data.success === true) {\n            window.alert('메세지를 전송하였습니다.');\n          } else {\n            window.alert('알 수 없는 오류가 발생했습니다. 잠시 후에 다시 시도해주세요.');\n          }\n        });\n  });\n\n  messageInput.on('keyup', function (e) {\n    var message = window.$(e.currentTarget).val();\n    var messageBytes = Util.getBytes(message);\n    var remain = 2000 - messageBytes;\n\n    // console.log(message);\n    // console.log(Util.getBytes(message));\n    // console.log(remain);\n\n    if (remain < 0) {\n      window.alert('2000 Bytes 를 초과할 수 없습니다.');\n      // message = message.substring(0, 90);\n      message = Util.cutBytes(message, 2000);\n      window.$(e.currentTarget).val(message);\n      window.$(e.currentTarget).focus();\n      messageBytes = Util.getBytes(message);\n    }\n\n    window.$('.remain-bytes').html(messageBytes + ' / 2000 바이트');\n  });\n});\n"],"sourceRoot":"/source/"}